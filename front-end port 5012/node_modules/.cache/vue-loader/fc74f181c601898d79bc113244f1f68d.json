{"remainingRequest":"/Users/verusins/Library/CloudStorage/OneDrive-UniversityofToronto/Sigmund/Java Intern/Diarial/vue-admin-template-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/verusins/Library/CloudStorage/OneDrive-UniversityofToronto/Sigmund/Java Intern/Diarial/vue-admin-template-master/src/views/dashboard/index.vue?vue&type=style&index=0&id=106c86ed&lang=scss&scoped=true&","dependencies":[{"path":"/Users/verusins/Library/CloudStorage/OneDrive-UniversityofToronto/Sigmund/Java Intern/Diarial/vue-admin-template-master/src/views/dashboard/index.vue","mtime":1688972252388},{"path":"/Users/verusins/Library/CloudStorage/OneDrive-UniversityofToronto/Sigmund/Java Intern/Diarial/vue-admin-template-master/node_modules/css-loader/dist/cjs.js","mtime":1686900197450},{"path":"/Users/verusins/Library/CloudStorage/OneDrive-UniversityofToronto/Sigmund/Java Intern/Diarial/vue-admin-template-master/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1686900197914},{"path":"/Users/verusins/Library/CloudStorage/OneDrive-UniversityofToronto/Sigmund/Java Intern/Diarial/vue-admin-template-master/node_modules/postcss-loader/src/index.js","mtime":1686900197625},{"path":"/Users/verusins/Library/CloudStorage/OneDrive-UniversityofToronto/Sigmund/Java Intern/Diarial/vue-admin-template-master/node_modules/sass-loader/dist/cjs.js","mtime":1686900197170},{"path":"/Users/verusins/Library/CloudStorage/OneDrive-UniversityofToronto/Sigmund/Java Intern/Diarial/vue-admin-template-master/node_modules/cache-loader/dist/cjs.js","mtime":1686900197169},{"path":"/Users/verusins/Library/CloudStorage/OneDrive-UniversityofToronto/Sigmund/Java Intern/Diarial/vue-admin-template-master/node_modules/vue-loader/lib/index.js","mtime":1686900197696}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5kYXNoYm9hcmQgewogICYtY29udGFpbmVyIHsKICAgIG1hcmdpbjogMjBweDsKICB9CiAgJi10ZXh0IHsKICAgIGZvbnQtc2l6ZTogMzBweDsKICAgIGxpbmUtaGVpZ2h0OiA0NnB4OwogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/dashboard","sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <div class=\"dashboard-text\">{{ name }}</div>\n    <el-card>\n      <el-button @click=\"resetDateFilter\">Reset Date Filter</el-button>\n      <el-button @click=\"clearFilter\">Reset All Filters</el-button>\n      <el-table ref=\"filterTable\" :data=\"diaryList\" style=\"width: 100%\">\n        <el-table-column prop=\"date\" label=\"date\" sortable width=\"150\" column-key=\"date\" />\n        <el-table-column\n          prop=\"weather\"\n          label=\"weather\"\n          width=\"150\"\n          :filters=\"[\n            { text: 'Sunny', value: 'sunny' },\n            { text: 'Cloud', value: 'cloud' },\n            { text: 'Windy', value: 'windy' },\n            { text: 'Rain', value: 'rain' },\n            { text: 'Heavy Rain', value: 'heavy rain' },\n            { text: 'Snow', value: 'snow' },\n            { text: 'Heavy Snow', value: 'heavy snow' },\n            { text: 'Lightning', value: 'lightning' },\n            { text: 'Storm', value: 'storm' },\n            { text: 'Other', value: 'other' },\n          ]\"\n          :filter-method=\"filterTag\"\n          filter-placement=\"bottom-end\"\n        >\n          <template slot-scope=\"scope\">\n            <el-tag\n              :type=\"scope.row.weather === 'sunny' ? 'primary' : (scope.row.weather === 'cloud' || scope.row.weather === 'windy' ? 'success' : 'warning')\"\n              disable-transitions\n            >{{ scope.row.weather }}</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"location\" label=\"location\" width=\"150\" />\n        <el-table-column prop=\"title\" label=\"title\" />\n        <el-table-column prop=\"modify\" label=\" \" width=\"85\">\n          <el-tag\n            :type=\"'info'\"\n            disable-transitions\n          >Modify</el-tag>\n        </el-table-column>\n        <el-table-column prop=\"modify\" label=\" \" width=\"85\">\n          <el-tag\n            :type=\"'danger'\"\n            disable-transitions\n          ><a @click=\"toInfo\">Delete</a></el-tag>\n        </el-table-column>\n      </el-table>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport diaryApi from '@/api/diary.js'\nimport { mapGetters } from 'vuex'\nexport default {\n  name: 'Dashboard',\n  data() {\n    return {\n      diaryList: []\n    }\n  },\n  computed: {\n    ...mapGetters(['name'])\n  },\n  created() {\n    this.getDiaryList()\n  },\n  methods: {\n    resetDateFilter() {\n      this.$refs.filterTable.clearFilter('date')\n    },\n    clearFilter() {\n      this.$refs.filterTable.clearFilter()\n    },\n    formatter(row, column) {\n      return row.address\n    },\n    filterTag(value, row) {\n      return row.tag === value\n    },\n    filterHandler(value, row, column) {\n      const property = column['property']\n      return row[property] === value\n    },\n    getDiaryList() {\n      diaryApi.getDiaryList().then(response => {\n        this.diaryList = response.data\n      })\n    },\n    toInfo() {\n      this.loading = true\n      this.$store.dispatch('dashboard', this.loginForm).then(() => {\n        console.log('redirect', this.redirect)\n        this.$router.push({ path: '/info' + 1 })\n        this.loading = false\n      }).catch(() => {\n        this.loading = false\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dashboard {\n  &-container {\n    margin: 20px;\n  }\n  &-text {\n    font-size: 30px;\n    line-height: 46px;\n  }\n}\n</style>\n"]}]}